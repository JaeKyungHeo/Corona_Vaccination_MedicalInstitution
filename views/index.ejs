<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>여러개 마커에 이벤트 등록하기1</title>
    
    <!-- <link rel="stylesheet" href="/css/master.css"> -->

</head>
<body>
    <center>
        <h1>COVID-19 예방접종 위탁 의료기관 조회</h1> <br><hr>
        <form action="/" method="post">
        <p> 
            <br>
            <div style="float:right; margin-right:250px;margin-right:70px; margin-bottom:7px;">
                <input type="text" style="width:450px;height:30px;font-size:20px;" name="region" placeholder="지역을 입력하세요" size="20"/>
                <button type="submit" style="height:35px;font-size:20px;">검색</button> 
            </div>
            
        </p>
        </form>
    </center>
    <div id="map" style="width:1300px;height:750px; margin-left:100px; float:left; " ></div>  
    <script type="text/javascript" src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=35fccf4b4e2a3179187346f26ed3f988&libraries=services"></script>

    <% if(typeof(info) != "undefined"){ %>
    <div style="overflow:scroll; width:500px; height:675px; padding:10px;float:right; margin-right:70px; border:1px solid black;">
        <ol id="placelist">
            <% for(i=0; i<info.length; i++){%>
            <li class="item">
                <div class="info">
                    <span><strong><%= info[i].orgnm%></strong></span><br>
                    <span>점심시간 : <%=timeList[i][0]%>:<%=timeList[i][1]%>~<%=timeList[i][2]%>:<%=timeList[i][3] %></span><br>
                    <span>진료시간 : <%=timeList[i][4]%>:<%=timeList[i][5]%>~<%=timeList[i][6]%>:<%=timeList[i][7] %></span><br>
                    <span style="color:gray" class="jibun gray"><%=info[i].orgZipaddr%></span><br>
                    <span style="color:blue" class="tel"><%=info[i].orgTlno%></span><br>
                </div>
                <hr>
            </li>
            <%} %>
        </ul>
    </div>
    <%} %>
    
    <% if(typeof(result) != "undefined"){ %>
   <script>
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div  
        mapOption = { 
            center: new kakao.maps.LatLng(37.596672, 127.051950), // 지도의 중심좌표
            level: 2 // 지도의 확대 레벨
        };
    
    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
    var geocoder = new kakao.maps.services.Geocoder();
    // 지도 확대 축소를 제어할 수 있는 줌 컨트롤을 생성합니다 
    var zoomControl = new kakao.maps.ZoomControl();
    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);
    
    var listData = "<%= result %>";
    listData = listData.replaceAll('&#34;','\"');
    listData = JSON.parse(listData);
    
    var count = 0;

    //입력되는 배열명이 listData로 들어오면 됨.
    listData.forEach(function(addr, index) {
        var tmpaddr = ((addr.orgZipaddr).split(','))[0];
        console.log(tmpaddr);
        geocoder.addressSearch(tmpaddr, function(result, status) { 
            if (status === kakao.maps.services.Status.OK) { 
                var coords = new kakao.maps.LatLng(result[0].y, result[0].x); 
                
                count += 1;

                var marker = new kakao.maps.Marker({
                    position: coords,
                    clickable: true}); 
                    
                    // 마커를 지도에 표시합니다. 
                    marker.setMap(map); 
                    
                    var num=1;
                    // 인포윈도우를 생성합니다 
                    var infowindow = new kakao.maps.InfoWindow({
                        content: '<div style="width:250px;text-align:center;padding:5px 0;">' + addr.orgnm + '</div>',
                    }); 
                    // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
                    // 이벤트 리스너로는 클로저를 만들어 등록합니다 
                    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
                    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
                    if(count == 1){
                        map.setCenter(coords);
                    }
                    // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
                    //console.log(listData.length);
            }
        });
     }); 
    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
    function makeOverListener(map, marker, infowindow) {
        return function() {
            infowindow.open(map, marker);
        };
    }
    
    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 
    function makeOutListener(infowindow) {
        return function() {
            infowindow.close();
        };
    }
    </script>
<% } %>

</body>
</html>